Up to date This page is up to date for Godot 4 3 If you still find outdated information please open an issue Asset Library About the Asset Library Using the Asset Library Submitting to the Asset Library Up to date This page is up to date for Godot 4 3 If you still find outdated information please open an issue About the Asset Library The Godot Asset Library otherwise known as the AssetLib is a repository of user submitted Godot addons scripts tools and other resources collectively referred to as assets They re available to all Godot users for download directly from within the engine but it can also be accessed at Godot s official website On the surface the Asset Library might look and function similar to asset stores available for other engines such as Unity s Asset Store or Unreal Engine s Marketplace where you can submit both freely available assets as well as paid commercial ones In addition often times such assets are distributed under non free proprietary licenses limiting what you can do with them The Asset Library is different all assets are distributed free of charge and under a host of open source licenses such as the MIT license the GPL and the Boost Software License This makes the AssetLib more similar to the software repositories of a Linux distribution This set of pages will cover how to use the AssetLib both from inside Godot and on the website how you can submit your own assets and what the guidelines for submission are Please note that the AssetLib is relatively young it may have various pain points bugs and usability issues As with all Godot projects the code repository is available on GitHub where you can submit pull requests and issues so please do not hesitate to visit it Types of assets Be aware that there are broadly two different types of assets you can post Assets labeled as Templates Projects or Demos appear under the Asset Library tab in the Godot Project Manager These assets are standalone Godot projects that can run by themselves Other assets show up inside of the Godot editor under the Asset Library main screen tab next to 2D 3D and Script These assets are meant to be downloaded and placed into an existing Godot project Frequently asked questions Can paid assets be uploaded to the asset library Not to the official one though in the future there might be other asset libraries which allow it That said you are allowed to monetize and sell Godot assets outside the Asset Library User contributed notes Please read the User contributed notes policy before submitting a comment Up to date This page is up to date for Godot 4 3 If you still find outdated information please open an issue Using the Asset Library On the website Overview As mentioned before you can access the web frontend of the Asset Library on Godot s official website This is what it looks like when you first visit it At the top you see the header which takes you to various other parts of the AssetLib at the moment it s empty as we are not logged in Searching In the center is the search bar settings section and the assets section below it this lets you filter out certain kinds of assets based on a host of criteria These include the asset category such as 2D tools scripts and demos engine version they are intended for sorting order by update date by name etc and support level While most other filter settings should be fairly self explanatory it s worth going over what support level means in the Asset Library Currently there are three support levels and each asset can belong to only one Official assets are created and maintained by the official Godot Engine developers Currently these include the official engine demos which showcase how various areas of the engine work Community assets are submitted and maintained by the members of the Godot community Testing assets are works in progress and may contain bugs and usability issues They are not recommended for use in serious projects but you are encouraged to download test them and submit issues to the original authors You can mix and match any of the search filters and criteria and upon clicking the Search button receive the list of all assets in the Library that match them Note that the search results are not updated in real time so you will have to re submit the search query each time you change the query settings Breakdown of an asset Now let s take a look at what an asset s page looks like and what it contains Asset s thumbnail icon Asset s name Current version number of the asset Asset s category Godot version and support status Asset s original author submitter The license the asset is distributed under The date of the asset s latest edit update A textual description of the asset Links related to the asset download link file list issue tracker Images and videos showcasing the asset Registering and logging in In order to upload assets to the AssetLib you need to be logged in and to do that you need a registered user account In the future this may also give you access to other features such as commenting on or rating the existing assets You do not need to be logged in to browse and download the assets The login registration page can be accessed from the AssetLib header From here you can register your account which requires a valid email address a username and a preferably strong password Then you can use your username and password to log in This will change the look of the AssetLib header Now you get access to a handful of new functions The feed which shows a list of status updates on your submitted assets and possibly more in the future A list of your uploaded assets The ability to submit new assets You can learn how to submit assets to the Library and what the asset submission guidelines are in the next part of this tutorial Submitting to the Asset Library In the editor Note The editor will display different categories of assets depending on whether you re browsing the Project Manager s Asset Library Projects tab or the editor s AssetLib tab The Project Manager s Asset Library Projects tab will only display assets that are standalone projects by themselves This is denoted on the asset library with the Templates Demos and Projects categories The editor s AssetLib tab will only display assets that are not standalone projects by themselves In other words it will display assets from all categories except Templates Demos and Projects You can also access the AssetLib directly from Godot Click on it and Godot will fetch info about the assets from the AssetLib Once it s finished you will see a window similar to what the AssetLib website looks like with some differences Similarly to the web version of the AssetLib here you can search for assets by category name and sort them by factors such as name or edit date Notably you can only fetch assets for the current version of Godot you are running Projects Demos and Templates can be downloaded from the Project Manager view of the AssetLib Addons tools scripts materials etc can be downloaded from the in project AssetLib and added to the current project In addition unlike when using the web frontend the search results are updated in real time you do not have to press Search after every change to your search query for the changes to take place In the future you will be able to choose a different AssetLib provider to fetch assets from using the Site dropdown menu however currently only the official Godot website version of the AssetLib is supported as well as the version that may be running on your local machine s web server the localhost option When you click on an asset you will see more information about it If you click on the Install button Godot will fetch an archive of the asset and will track download progress of it at the bottom of the editor window If the download fails you can retry it using the Retry button When it finishes you can proceed to install it using the Install button This will bring up the Package Installer window Here you can see a list of all the files that will be installed You can tick off any of the files that you do not wish to install and Godot will also inform you about any problems with files that it cannot install These files will be shown in red and hovering over them will show you a message stating why it cannot be installed Once you are done you can press the Install button which will unzip all the files in the archive and import any assets contained therein such as images or 3D models Once this is done you should see a message stating that the Package installation is complete You may also use the Import button to import asset archives obtained elsewhere such as downloading them directly from the AssetLib web frontend which will take you through the same package installation procedure as with the assets downloaded directly via Godot that we just covered User contributed notes Please read the User contributed notes policy before submitting a comment Up to date This page is up to date for Godot 4 3 If you still find outdated information please open an issue Submitting to the Asset Library Introduction This tutorial aims to serve as a guide on how you can submit your own assets to the Godot Asset Library and share them with the Godot community As mentioned in the Using the Asset Library document in order to be able to submit assets to the AssetLib you need to have a registered account and be logged in Submission guidelines Before submitting your asset please ensure it follows all of the requirements and also consider following the recommendations Requirements Generally speaking most assets people submit to the asset library are accepted However in order for your asset to be accepted there are a few requirements your asset needs to meet to be approved The asset must work If the asset doesn t run or otherwise doesn t work in the specified Godot version then it will be rejected The asset must have a proper gitignore file It s important to keep redundant data out of the repository Here s a template No submodules or any submodules must be non essential GitHub does not include submodules in the downloaded ZIP file so if the asset needs the contents of the submodule your asset won t work The license needs to be correct The license listed on the asset library must match the license in the repository The repo MUST have a license file called either LICENSE or LICENSE md This file must contain the license text itself and a copyright statement that includes the year s and copyright holder Use proper English for the name and description of your asset This includes using correct capitalization and using full sentences in the description You can also include other languages but there should at least be an English version The icon link must be a direct link For icons hosted on GitHub the link must start with raw githubusercontent com not github com Recommendations These things are not required for your asset to be approved but if you follow these recommendations you can help make the asset library a better place for all users When creating non project assets it is common practice to place your files inside of an addons asset_name folder Do this to avoid having your files clash with other assets or with the files of users installing your asset This folder will not be automatically generated when a user installs your asset Fix or suppress all script warnings The warning system is there to help identify issues with your code but people using your asset don t need to see them Make your code conform to the official style guides Having a consistent style helps other people read your code and it also helps if other people wish to contribute to your asset See the GDScript style guide or the C style guide If you have screenshots in your repo place them in their own subfolder and add an empty gdignore file in the same folder note gd not git This prevents Godot from importing your screenshots On Windows open a command prompt in the project folder and run type nul gdignore to create a file whose name starts with a period If your asset is a library for working with other files consider including example files in the asset Consider adding a gitattributes file to your repo This file allows giving extra instructions to Git such as specifying line endings and listing files not required for your asset to function with the export ignore directive This directive removes such files from the resulting ZIP file preventing them from being downloaded by the asset library users These are common examples of gitattributes Projects Templates Addons Asset Packs Normalize line endings for all files that Git considers text files text auto eol lf Copy to clipboard Normalize line endings for all files that Git considers text files text auto eol lf Only include the addons folder when downloading from the Asset Library export ignore addons export ignore addons export ignore Copy to clipboard If you are submitting a plugin add a copy of your license and readme to the plugin folder itself This is the folder that users are guaranteed to keep with their project so a copy ensures they always have those files handy and helps them fulfill your licensing terms While the asset library allows more than just GitHub consider hosting your asset s source code on GitHub Other services may not work reliably and a lack of familiarity can be a barrier to contributors Submitting Once you are logged in you will be able to head over to the Submit Assets page of the AssetLib which will look like this While it may look like a lot and there is more as you scroll down each field is described in terms of what you should put in We will nonetheless go over what is required in the submission form here as well Asset Name The name of your asset Should be a unique descriptive title of what your asset is Category The category that your asset belongs to and will be shown in search results The category is split into Addons and Projects In editor assets of the Project type Templates Demos Projects only show up when viewing the AssetLib from the Project Manager while assets of the Addon type will only be visible from inside a project Godot version The version of the engine that the asset works with Currently it s not possible to have a single asset entry contain downloads for multiple engine versions so you may need to re submit the asset multiple times with an entry for each Godot version it supports This is particularly important when dealing with major versions of the engine such as Godot 2 x and Godot 3 x Version The version number of the asset While you are free to choose and use any versioning scheme that you like you may want to look into something such as SemVer if you want your asset s versioning scheme to be clear and consistent Note that there is also an internal version number incremented every time the asset download URL is changed or updated Repository host Assets uploaded to the AssetLib are not hosted on it directly Instead they point to repositories hosted on third party Git providers such as GitHub GitLab or Bitbucket This is where you choose which provider your asset uses so the site can compute the final download link Repository URL The URL to your asset s files webpage This will vary based on your choice of provider but it should look similar to https github com user project Issues URL The URL to your asset s issue tracker Again this will differ from repository host to repository host but will likely look similar to https github com user project issues You may leave this field empty if you use your provider s issue tracker and it s part of the same repository Download Commit The commit of the asset For example b1d3172f89b86e52465a74f63a74ac84c491d3e1 The site computes the actual download URL from this Icon URL The URL to your asset s icon which will be used as a thumbnail in the AssetLib search results and on the asset s page Should be an image in either the PNG or JPG format The icon must be square 1 1 aspect ratio It should have a minimum resolution of 128 128 pixels Note For icons hosted on GitHub URLs must be provided in the form of https raw githubusercontent com user project branch Icon png License The license under which you are distributing the asset The list includes a variety of free and open source software licenses such as GPL v2 and v3 MIT BSD and Boost Software License You can visit OpenSource org for a detailed description of each of the listed licenses Description Finally you can use the Description field for a textual overview of your asset its features and behavior a changelog et cetera In the future formatting with Markdown will be supported but currently your only option is plain text You may also include up to three video and or image previews which will be shown at the bottom of the asset page Use the Enable checkbox on each of the preview submission boxes to enable them Type Either an image or a video Image YouTube URL Either a link to the image or to a video hosted on YouTube Thumbnail URL A URL to an image that will be used as a thumbnail for the preview This option will be removed eventually and thumbnails will be automatically computed instead Once you are done press Submit Your asset will be entered into the review queue You can check all assets currently pending a review here The approval process is manual and may take up to a few days for your asset to be accepted or rejected so please be patient Note You may have some luck accelerating the approval process by messaging the moderators and AssetLib reviewers on the Godot Contributors Chat or the official Discord server You will be informed when your asset is reviewed If it was rejected you will be told why that may have been and you will be able to submit it again with the appropriate changes User contributed notes Please read the User contributed notes policy before submitting a comment Up to date This page is up to date for Godot 4 3 If you still find outdated information please open an issue Community channels So where is the Godot community and where can you ask questions and get help This page used to list the various official and user supported Godot communities That list is now available on the Godot website Language based communities See the User groups page of the website for a list of local communities User contributed notes Please read the User contributed notes policy before submitting a comment Up to date This page is up to date for Godot 4 3 If you still find outdated information please open an issue Tutorials and resources This is a list of third party tutorials and resources created by the Godot community For resources remember that there is the official Godot Asset Library full of official and community resources too Also have a look at this huge list over at Reddit Think there is something missing here Feel free to submit a Pull Request as always Where to start The Godot video tutorials by GDQuest are well regarded in the community and often recommended as a gentle introduction to beginners GDQuest s Learn GDScript From Zero is a free and open source interactive tutorial for absolute beginners to learn to program with Godot s GDScript language It is available as a desktop application or in the browser Some tutorials mentioned below cover more advanced subjects e g on 3D or shaders Video tutorials For video tutorials we recommend looking on YouTube There s many great channels covering a wide array of subjects Text tutorials FinePointCGI website by Mitch GDScript website by Andrew Wilkes Godot Recipes by KidsCanCode Godot Tutorials by SomethingLikeGames Game Dev Artisan website Night Quest Games Blog Devlogs bitbrain DevDuck 2D Resources awesome godot A curated list of free libre plugins scripts and add ons Godot Asset Library Godot Shaders A community driven shader library User contributed notes Please read the User contributed notes policy before submitting a comment